@model Deneme.Models.CariMutabakkat
@{

    Layout = null;
}


@using (Html.BeginForm("Add_CR", "CurrentReconciliation", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.CariMutabakatId)
    <div class="block push-bit">
        <p class="text-info m-b-15 font-13">
            @Deneme.Resource.AddCurrentReconciliationExcel
        </p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <form>
            <div class="form-row">
                <div class="form-group col-md-6">

                    @Html.DropDownList("Ay", new SelectList(Enum.GetValues(typeof(Deneme.Models.FaturaBilgileri.Months))), Deneme.Resource.SelectInvoiceMonth, new
               {
                   @class = "form-control",
                   @required = "",
                   oninvalid = "this.setCustomValidity(" + "'" + @Deneme.Resource.Required + "'" + ")",
                   oninput = "setCustomValidity('')"
               })
                    @Html.ValidationMessageFor(model => model.Ay, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-6">

                    @Html.DropDownList("Yıl", new SelectList(ViewBag.Yıl), Deneme.Resource.SelectInvoiceYear, new
               {
                   @class = "form-control",
                   @required = "",
                   oninvalid = "this.setCustomValidity(" + "'" + @Deneme.Resource.Required + "'" + ")",
                   oninput = "setCustomValidity('')"
               })
                    @Html.ValidationMessageFor(model => model.Yıl, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-12">

                    @Html.DropDownList("ŞablonId", null, Deneme.Resource.SelectTemplateName, new
               {
                   @class = "form-control",
                   @required = "",
                   oninvalid = "this.setCustomValidity(" + "'" + @Deneme.Resource.Required + "'" + ")",
                   oninput = "setCustomValidity('')"
               })
                    @Html.ValidationMessageFor(model => model.ŞablonId, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-row">
                <div class="form-group m-b-0 col-md-12">

                    <input type="file" data-buttonText="@Deneme.Resource.ChooseFile" class="filestyle" data-placeholder="@Deneme.Resource.NoFile" name="excelfile" data-buttonname="btn-danger" data-iconname="fa fa-cloud-upload" required oninvalid = "this.setCustomValidity('@Deneme.Resource.SelectFile')",
               oninput = "setCustomValidity('')">
                </div>
            </div>
            <div class="form-group  m-t-15">
                <div class=" progress progress-bar-info" role="progressbar" aria-valuenow="95" aria-valuemin="0" aria-valuemax="100" id="progressbar" style="position: relative; display: none">
                    <span class="sr-only" style="position: center; left: 35%; top: 50%" id="progressBar-label">
                        @Deneme.Resource.Uploading
                    </span>
                </div>
            </div>
            <div class="form-group text-center m-t-15 ">
                <button class="btn btn-danger btn-block text-uppercase waves-effect waves-light"
                        type="submit">
                    @Deneme.Resource.Save
                </button>
            </div>



        </form>
    </div>
    <script src="~/assets/js/bootstrap-filestyle.min.js"></script>
}
